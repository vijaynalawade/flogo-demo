{
    "imports": [
        "github.com/project-flogo/flow",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/rest",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/project-flogo/graphql/trigger/graphql"
    ],
    "name": "GraphQL",
    "description": " ",
    "version": "1.1.0",
    "type": "flogo:app",
    "appModel": "1.1.0",
    "feVersion": "2.6.0",
    "triggers": [
        {
            "ref": "#graphql",
            "name": "GraphQLTrigger",
            "description": "Get all posts by user",
            "settings": {
                "port": 8080,
                "path": "/graphql",
                "secureConnection": false,
                "serverKey": "",
                "caCertificate": "",
                "graphqlSchema": "type User {\r\n    id: Int!\r\n    name: String\r\n    username: String\r\n    email: String\r\n    address: Address\r\n    phone: String\r\n    website: String\r\n}\r\n\r\ntype Address {\r\n    street: String\r\n    suite: String\r\n    city: String\r\n    zipcode: String\r\n}\r\n\r\ntype Post {\r\n    postId: Int!\r\n    user: User\r\n    title: String\r\n    body: String\r\n}\r\n\r\ntype Query {\r\n    \"Get all posts by user\"\r\n    GetPosts(userId: Int!): [Post]\r\n    \"Get user details\"\r\n    GetUser(userId: Int!): User\r\n}\r\n\r\ninput PostInput {\r\n    title: String\r\n    body: String\r\n    userId: Int\r\n}\r\n\r\ntype Mutation {\r\n    \"Create a post - will not be created on server but will be faked as if\"\r\n    CreatePost(post: PostInput): Post\r\n}\r\n\r\nschema {\r\n    query: Query\r\n    mutation: Mutation\r\n}"
            },
            "id": "GraphQLTrigger",
            "handlers": [
                {
                    "description": "Get all posts by user",
                    "settings": {
                        "operation": "Query",
                        "resolverFor": "GetPosts"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:Query_GetPosts"
                        },
                        "input": {
                            "arguments": "=$.arguments"
                        },
                        "output": {
                            "data": "=$.data"
                        }
                    },
                    "schemas": {
                        "output": {
                            "arguments": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"number\"}},\"required\":[\"userId\"]}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"number\"}},\"required\":[\"userId\"]}"
                            }
                        }
                    }
                },
                {
                    "description": "Get user details",
                    "settings": {
                        "operation": "Query",
                        "resolverFor": "GetUser"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:Query_GetUser"
                        },
                        "input": {
                            "arguments": "=$.arguments"
                        },
                        "output": {
                            "data": "=$.data"
                        }
                    },
                    "schemas": {
                        "output": {
                            "arguments": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"number\"}},\"required\":[\"userId\"]}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"number\"}},\"required\":[\"userId\"]}"
                            }
                        }
                    }
                },
                {
                    "description": "Create a post - will not be created on server but will be faked as if",
                    "settings": {
                        "operation": "Mutation",
                        "resolverFor": "CreatePost"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:Mutation_CreatePost"
                        },
                        "input": {
                            "arguments": "=$.arguments"
                        },
                        "output": {
                            "data": "=$.data"
                        }
                    },
                    "schemas": {
                        "output": {
                            "arguments": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"post\":{\"type\":\"object\",\"required\":[],\"properties\":{\"title\":{\"type\":\"string\"},\"body\":{\"type\":\"string\"},\"userId\":{\"type\":\"number\"}}}},\"required\":[]}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"post\":{\"type\":\"object\",\"required\":[],\"properties\":{\"title\":{\"type\":\"string\"},\"body\":{\"type\":\"string\"},\"userId\":{\"type\":\"number\"}}}},\"required\":[]}"
                            }
                        }
                    }
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:Query_GetPosts",
            "data": {
                "name": "Query_GetPosts",
                "description": "Get all posts by user",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "InvokePosts",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "InvokePosts",
                        "to": "InvokeUser",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "InvokeUser",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"Received request to get all posts for userId: \", string.tostring($flow.arguments.userId))"
                            }
                        }
                    },
                    {
                        "id": "InvokePosts",
                        "name": "InvokePosts",
                        "activity": {
                            "ref": "#rest",
                            "input": {
                                "Method": "GET",
                                "Uri": "https://jsonplaceholder.typicode.com/posts",
                                "requestType": "application/json",
                                "responseType": "application/json",
                                "Use certificate for verification": false,
                                "Server Certificate": "",
                                "queryParams": {
                                    "mapping": {
                                        "userId": "=$flow.arguments.userId"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "queryParams": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"number\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"userId\",\"type\":\"number\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    },
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                                    }
                                },
                                "output": {
                                    "responseBody": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"number\"},\"id\":{\"type\":\"number\"},\"title\":{\"type\":\"string\"},\"body\":{\"type\":\"string\"}}}}",
                                        "fe_metadata": "[\r\n  {\r\n    \"userId\": 1,\r\n    \"id\": 1,\r\n    \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\r\n    \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\r\n  }\r\n ]"
                                    },
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "InvokeUser",
                        "name": "InvokeUser",
                        "activity": {
                            "ref": "#rest",
                            "input": {
                                "Method": "GET",
                                "Uri": "https://jsonplaceholder.typicode.com/users/{userId}",
                                "requestType": "application/json",
                                "responseType": "application/json",
                                "Use certificate for verification": false,
                                "Server Certificate": "",
                                "pathParams": {
                                    "mapping": {
                                        "userId": "=string.tostring($flow.arguments.userId)"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "pathParams": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"userId\",\"type\":\"string\"}]"
                                    },
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                                    }
                                },
                                "output": {
                                    "responseBody": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"address\":{\"type\":\"object\",\"properties\":{\"street\":{\"type\":\"string\"},\"suite\":{\"type\":\"string\"},\"city\":{\"type\":\"string\"},\"zipcode\":{\"type\":\"string\"}}},\"phone\":{\"type\":\"string\"},\"website\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\r\n  \"id\": 1,\r\n  \"name\": \"Leanne Graham\",\r\n  \"username\": \"Bret\",\r\n  \"email\": \"Sincere@april.biz\",\r\n  \"address\": {\r\n    \"street\": \"Kulas Light\",\r\n    \"suite\": \"Apt. 556\",\r\n    \"city\": \"Gwenborough\",\r\n    \"zipcode\": \"92998-3874\"\r\n  },\r\n  \"phone\": \"1-770-736-8031 x56442\",\r\n  \"website\": \"hildegard.org\"\r\n}"
                                    },
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "data": {
                                        "mapping": {
                                            "Post": {
                                                "@foreach($activity[InvokePosts].responseBody)": {
                                                    "postId": "=number.int64($.id)",
                                                    "title": "=$.title",
                                                    "user": {
                                                        "id": "=number.int64($activity[InvokeUser].responseBody.id)",
                                                        "name": "=$activity[InvokeUser].responseBody.name",
                                                        "username": "=$activity[InvokeUser].responseBody.username",
                                                        "email": "=$activity[InvokeUser].responseBody.email",
                                                        "address": "=$activity[InvokeUser].responseBody.address",
                                                        "phone": "=$activity[InvokeUser].responseBody.phone",
                                                        "website": "=$activity[InvokeUser].responseBody.website"
                                                    },
                                                    "body": "=$.body"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "arguments",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"userId\":{\"type\":\"number\"}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Post\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"postId\"],\"properties\":{\"postId\":{\"type\":\"number\"},\"user\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"address\":{\"type\":\"object\",\"required\":[],\"properties\":{\"street\":{\"type\":\"string\"},\"suite\":{\"type\":\"string\"},\"city\":{\"type\":\"string\"},\"zipcode\":{\"type\":\"string\"}}},\"phone\":{\"type\":\"string\"},\"website\":{\"type\":\"string\"}}},\"title\":{\"type\":\"string\"},\"body\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"GraphQLTrigger\",\"properties\":{\"arguments\":{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"number\"}},\"required\":[\"userId\"]}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"data\":{\"type\":\"object\",\"properties\":{\"Post\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"postId\"],\"properties\":{\"postId\":{\"type\":\"number\"},\"user\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"address\":{\"type\":\"object\",\"required\":[],\"properties\":{\"street\":{\"type\":\"string\"},\"suite\":{\"type\":\"string\"},\"city\":{\"type\":\"string\"},\"zipcode\":{\"type\":\"string\"}}},\"phone\":{\"type\":\"string\"},\"website\":{\"type\":\"string\"}}},\"title\":{\"type\":\"string\"},\"body\":{\"type\":\"string\"}}}}},\"required\":[]}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:Query_GetUser",
            "data": {
                "name": "Query_GetUser",
                "description": "Get user details",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "InvokeUser",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "InvokeUser",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"Received request to get details for userId: \", string.tostring($flow.arguments.userId))"
                            }
                        }
                    },
                    {
                        "id": "InvokeUser",
                        "name": "InvokeUser",
                        "activity": {
                            "ref": "#rest",
                            "input": {
                                "Method": "GET",
                                "Uri": "https://jsonplaceholder.typicode.com/users/{userId}",
                                "requestType": "application/json",
                                "responseType": "application/json",
                                "Use certificate for verification": false,
                                "Server Certificate": "",
                                "pathParams": {
                                    "mapping": {
                                        "userId": "=string.tostring($flow.arguments.userId)"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "pathParams": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"userId\",\"type\":\"string\"}]"
                                    },
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                                    }
                                },
                                "output": {
                                    "responseBody": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"address\":{\"type\":\"object\",\"properties\":{\"street\":{\"type\":\"string\"},\"suite\":{\"type\":\"string\"},\"city\":{\"type\":\"string\"},\"zipcode\":{\"type\":\"string\"}}},\"phone\":{\"type\":\"string\"},\"website\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\r\n  \"id\": 1,\r\n  \"name\": \"Leanne Graham\",\r\n  \"username\": \"Bret\",\r\n  \"email\": \"Sincere@april.biz\",\r\n  \"address\": {\r\n    \"street\": \"Kulas Light\",\r\n    \"suite\": \"Apt. 556\",\r\n    \"city\": \"Gwenborough\",\r\n    \"zipcode\": \"92998-3874\"\r\n  },\r\n  \"phone\": \"1-770-736-8031 x56442\",\r\n  \"website\": \"hildegard.org\"\r\n}"
                                    },
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "data": {
                                        "mapping": {
                                            "User": {
                                                "id": "=number.int64($activity[InvokeUser].responseBody.id)",
                                                "name": "=$activity[InvokeUser].responseBody.name",
                                                "username": "=$activity[InvokeUser].responseBody.username",
                                                "email": "=$activity[InvokeUser].responseBody.email",
                                                "address": "=$activity[InvokeUser].responseBody.address",
                                                "phone": "=$activity[InvokeUser].responseBody.phone",
                                                "website": "=$activity[InvokeUser].responseBody.website"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "arguments",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"userId\":{\"type\":\"number\"}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"User\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"address\":{\"type\":\"object\",\"required\":[],\"properties\":{\"street\":{\"type\":\"string\"},\"suite\":{\"type\":\"string\"},\"city\":{\"type\":\"string\"},\"zipcode\":{\"type\":\"string\"}}},\"phone\":{\"type\":\"string\"},\"website\":{\"type\":\"string\"}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"GraphQLTrigger\",\"properties\":{\"arguments\":{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"number\"}},\"required\":[\"userId\"]}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"data\":{\"type\":\"object\",\"properties\":{\"User\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"address\":{\"type\":\"object\",\"required\":[],\"properties\":{\"street\":{\"type\":\"string\"},\"suite\":{\"type\":\"string\"},\"city\":{\"type\":\"string\"},\"zipcode\":{\"type\":\"string\"}}},\"phone\":{\"type\":\"string\"},\"website\":{\"type\":\"string\"}}}},\"required\":[]}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:Mutation_CreatePost",
            "data": {
                "name": "Mutation_CreatePost",
                "description": "Create a post - will not be created on server but will be faked as if",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "InvokeCreatePost",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "InvokeCreatePost",
                        "to": "InvokeUser",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "InvokeUser",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"Received request to create a post for userId: \", string.tostring($flow.arguments.post.userId))"
                            }
                        }
                    },
                    {
                        "id": "InvokeCreatePost",
                        "name": "InvokeCreatePost",
                        "activity": {
                            "ref": "#rest",
                            "input": {
                                "Method": "POST",
                                "Uri": "https://jsonplaceholder.typicode.com/posts",
                                "requestType": "application/json",
                                "responseType": "application/json",
                                "Use certificate for verification": false,
                                "Server Certificate": "",
                                "body": "=$flow.arguments.post"
                            },
                            "schemas": {
                                "input": {
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                                    },
                                    "body": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"title\":{\"type\":\"string\"},\"body\":{\"type\":\"string\"},\"userId\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\r\n  \"title\": \"foo\",\r\n  \"body\": \"bar\",\r\n  \"userId\": 1\r\n}"
                                    }
                                },
                                "output": {
                                    "responseBody": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"},\"title\":{\"type\":\"string\"},\"body\":{\"type\":\"string\"},\"userId\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\r\n    \"id\": 101,\r\n    \"title\": \"foo\",\r\n    \"body\": \"bar\",\r\n    \"userId\": 1\r\n}\r\n  "
                                    },
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "InvokeUser",
                        "name": "InvokeUser",
                        "activity": {
                            "ref": "#rest",
                            "input": {
                                "Method": "GET",
                                "Uri": "https://jsonplaceholder.typicode.com/users/{userId}",
                                "requestType": "application/json",
                                "responseType": "application/json",
                                "Use certificate for verification": false,
                                "Server Certificate": "",
                                "pathParams": {
                                    "mapping": {
                                        "userId": "=string.tostring($flow.arguments.post.userId)"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "pathParams": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"userId\",\"type\":\"string\"}]"
                                    },
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                                    }
                                },
                                "output": {
                                    "responseBody": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"address\":{\"type\":\"object\",\"properties\":{\"street\":{\"type\":\"string\"},\"suite\":{\"type\":\"string\"},\"city\":{\"type\":\"string\"},\"zipcode\":{\"type\":\"string\"}}},\"phone\":{\"type\":\"string\"},\"website\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\r\n  \"id\": 1,\r\n  \"name\": \"Leanne Graham\",\r\n  \"username\": \"Bret\",\r\n  \"email\": \"Sincere@april.biz\",\r\n  \"address\": {\r\n    \"street\": \"Kulas Light\",\r\n    \"suite\": \"Apt. 556\",\r\n    \"city\": \"Gwenborough\",\r\n    \"zipcode\": \"92998-3874\"\r\n  },\r\n  \"phone\": \"1-770-736-8031 x56442\",\r\n  \"website\": \"hildegard.org\"\r\n}"
                                    },
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "data": {
                                        "mapping": {
                                            "Post": {
                                                "postId": "=number.int64($activity[InvokeCreatePost].responseBody.id)",
                                                "user": {
                                                    "id": "=number.int64($activity[InvokeUser].responseBody.id)",
                                                    "name": "=$activity[InvokeUser].responseBody.name",
                                                    "username": "=$activity[InvokeUser].responseBody.username",
                                                    "email": "=$activity[InvokeUser].responseBody.email",
                                                    "address": "=$activity[InvokeUser].responseBody.address",
                                                    "phone": "=$activity[InvokeUser].responseBody.phone",
                                                    "website": "=$activity[InvokeUser].responseBody.website"
                                                },
                                                "title": "=$activity[InvokeCreatePost].responseBody.title",
                                                "body": "=$activity[InvokeCreatePost].responseBody.body"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "arguments",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"post\":{\"type\":\"object\",\"required\":[],\"properties\":{\"title\":{\"type\":\"string\"},\"body\":{\"type\":\"string\"},\"userId\":{\"type\":\"number\"}}}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Post\":{\"type\":\"object\",\"required\":[\"postId\"],\"properties\":{\"postId\":{\"type\":\"number\"},\"user\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"address\":{\"type\":\"object\",\"required\":[],\"properties\":{\"street\":{\"type\":\"string\"},\"suite\":{\"type\":\"string\"},\"city\":{\"type\":\"string\"},\"zipcode\":{\"type\":\"string\"}}},\"phone\":{\"type\":\"string\"},\"website\":{\"type\":\"string\"}}},\"title\":{\"type\":\"string\"},\"body\":{\"type\":\"string\"}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"GraphQLTrigger\",\"properties\":{\"arguments\":{\"type\":\"object\",\"properties\":{\"post\":{\"type\":\"object\",\"required\":[],\"properties\":{\"title\":{\"type\":\"string\"},\"body\":{\"type\":\"string\"},\"userId\":{\"type\":\"number\"}}}},\"required\":[]}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"data\":{\"type\":\"object\",\"properties\":{\"Post\":{\"type\":\"object\",\"required\":[\"postId\"],\"properties\":{\"postId\":{\"type\":\"number\"},\"user\":{\"type\":\"object\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"address\":{\"type\":\"object\",\"required\":[],\"properties\":{\"street\":{\"type\":\"string\"},\"suite\":{\"type\":\"string\"},\"city\":{\"type\":\"string\"},\"zipcode\":{\"type\":\"string\"}}},\"phone\":{\"type\":\"string\"},\"website\":{\"type\":\"string\"}}},\"title\":{\"type\":\"string\"},\"body\":{\"type\":\"string\"}}}},\"required\":[]}},\"required\":[]}"
                    }
                }
            }
        }
    ],
    "properties": [
        {
            "name": "PORT",
            "type": "float64",
            "value": 8080
        }
    ],
    "contrib": "W3sicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1jb250cmliLmdpdC9jb250cmlidXRpb25zL0dlbmVyYWwiLCJzM2xvY2F0aW9uIjoiVGliY28vR2VuZXJhbCJ9XQ==",
    "fe_metadata": "UEsDBAoAAAAIANgUxU6rqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACADYFMVOq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}