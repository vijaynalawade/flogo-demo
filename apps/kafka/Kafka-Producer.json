{
    "imports": [
        "github.com/project-flogo/flow",
        "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/kafka/src/app/Kafka/activity/producer",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/trigger/timer"
    ],
    "name": "Kafka-Publisher",
    "description": " ",
    "version": "1.1.0",
    "type": "flogo:app",
    "appModel": "1.1.0",
    "feVersion": "2.6.0",
    "triggers": [
        {
            "ref": "#timer",
            "name": "TimerTrigger",
            "description": "",
            "settings": {},
            "id": "TimerTrigger",
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "Repeating": false,
                        "Time Interval": 1,
                        "Interval Unit": "Second"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:Publisher"
                        }
                    }
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:Publisher",
            "data": {
                "name": "Publisher",
                "description": "",
                "links": [],
                "tasks": [
                    {
                        "id": "KafkaProducer",
                        "name": "KafkaProducer",
                        "settings": {
                            "iterate": 5
                        },
                        "type": "iterator",
                        "activity": {
                            "ref": "#producer",
                            "input": {
                                "kafkaConnection": {
                                    "id": "52ba4c10-8738-11e9-ae53-c7e2e09f1867",
                                    "type": "flogo:connector",
                                    "version": "1.1.2",
                                    "name": "tibco-kafka",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Apache Kafka Client Configuration",
                                    "description": "",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/kafka/src/app/Kafka/connector/kafka",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Name",
                                                "description": "Name of the configuration"
                                            },
                                            "value": "Kafka"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "Connection description"
                                            },
                                            "value": "Apache Kafka client configuration"
                                        },
                                        {
                                            "name": "brokers",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Brokers",
                                                "description": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"Kafka.Kafka.Brokers\"]"
                                        },
                                        {
                                            "name": "authMode",
                                            "type": "string",
                                            "display": {
                                                "name": "Auth Mode",
                                                "description": "Choose authentication mode to connect to Kafka cluster"
                                            },
                                            "allowed": [
                                                "None",
                                                "SASL/PLAIN",
                                                "SSL"
                                            ],
                                            "value": "None"
                                        },
                                        {
                                            "name": "userName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User Name",
                                                "visible": false,
                                                "description": "User name for SASL authentication",
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "type": "password",
                                                "visible": false,
                                                "description": "Password for SASL authentication",
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": "SECRET:bE5uu004/Y5akMSDEvAezQ=="
                                        },
                                        {
                                            "name": "clientCert",
                                            "type": "string",
                                            "display": {
                                                "description": "A PEM encoded certificate file",
                                                "name": "Client Certificate",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".pem",
                                                    ".cert",
                                                    ".cer",
                                                    ".crt"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientKey",
                                            "type": "string",
                                            "display": {
                                                "description": "A PEM encoded private key file",
                                                "name": "Client Key",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".pem",
                                                    ".cert",
                                                    ".cer",
                                                    ".crt",
                                                    ".key"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "caCert",
                                            "type": "string",
                                            "display": {
                                                "description": "A PEM encoded CA or Server certificate file",
                                                "name": "CA or Server Certificate",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".pem",
                                                    ".cert",
                                                    ".cer",
                                                    ".crt"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "connectionTimeout",
                                            "type": "integer",
                                            "display": {
                                                "name": "Connection Timeout",
                                                "description": "The amount of time in seconds to wait for the initial connection",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"Kafka.Kafka.Connection_Timeout\"]"
                                        },
                                        {
                                            "name": "retryBackoff",
                                            "type": "integer",
                                            "display": {
                                                "name": "Retry Backoff",
                                                "description": "The amount of time in milliseconds to wait for leader election to occur before retrying",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"Kafka.Kafka.Retry_Backoff\"]"
                                        },
                                        {
                                            "name": "retryMax",
                                            "type": "integer",
                                            "display": {
                                                "name": "Max Retry",
                                                "description": "The total number of times to retry a metadata request when the cluster is in the middle of a leader election"
                                            },
                                            "value": 3
                                        },
                                        {
                                            "name": "refreshFrequency",
                                            "type": "integer",
                                            "display": {
                                                "name": "Refresh Frequency",
                                                "description": "The amount of time in seconds after which metadata is refreshed in the background. Set 0 to disable it."
                                            },
                                            "value": 40
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/Kafka/connector/kafka/connector.json",
                                    "display": {
                                        "category": "Kafka",
                                        "smallIcon": "icons/kafka.png",
                                        "largeIcon": "icons/kafka.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Save",
                                            "display": {
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1559865583505,
                                    "user": "flogo",
                                    "connectorName": "Kafka",
                                    "connectorDescription": " "
                                },
                                "ackMode": "All",
                                "ackTimeout": 10000,
                                "compressionType": "None",
                                "valueType": "JSON",
                                "maxRequestSize": 1048576,
                                "maxMessages": 0,
                                "frequency": 1000,
                                "topic": "=$property[\"Topic\"]",
                                "key": "",
                                "stringValue": "",
                                "jsonValue": {
                                    "mapping": {
                                        "FName": "=string.concat(\"FirstName\", $iteration[key])",
                                        "LName": "=string.concat(\"LastName\", $iteration[key])"
                                    }
                                },
                                "headers": {
                                    "mapping": {
                                        "company": "=string.concat(\"Header\", $iteration[key])"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "jsonValue": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"FName\":{\"type\":\"string\"},\"LName\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"FName\":\"\",\n    \"LName\":\"\"\n}"
                                    },
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"company\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"company\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [],
                    "output": [],
                    "fe_metadata": {}
                }
            }
        }
    ],
    "properties": [
        {
            "name": "Kafka.Kafka.Brokers",
            "type": "string",
            "value": "localhost:9092"
        },
        {
            "name": "Kafka.Kafka.Connection_Timeout",
            "type": "float64",
            "value": 30
        },
        {
            "name": "Kafka.Kafka.Retry_Backoff",
            "type": "float64",
            "value": 250
        },
        {
            "name": "Topic",
            "type": "string",
            "value": "tn-demo"
        }
    ],
    "contrib": "W3sicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1jb250cmliLmdpdC9jb250cmlidXRpb25zL0dlbmVyYWwiLCJzM2xvY2F0aW9uIjoiVGliY28vR2VuZXJhbCJ9LHsicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1wbHVnaW5zLmdpdC9jb250cmlidXRpb25zL2thZmthL3NyYy9hcHAvS2Fma2EiLCJzM2xvY2F0aW9uIjoiVGliY28vS2Fma2EifV0=",
    "fe_metadata": "UEsDBAoAAAAIAHiQx06rqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACAB4kMdOq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}